
-- This is an example site configuration for Gluon v2015.1+ with FF-KBU
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for SSH access
 authorized_keys = { 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAm91X3/MVBaiQo3sMXK+X5CWonsyml9ZM5N0MV32yplCyEZnMILt//A14DlJal/YODqlo19JDR6y24Q3lwErBmdfiK1CmanJVIC/osZIEDHX98nuilzyEsBpQZ0WRFnbGUHHu6VFTCEJOimMJMo1HZVdCAWL3yER05k9Wvz9GIXpOUh9VkD53nNBJhwjA+t5RJPqOYC4NJPQDorr1USRgxg+GpEJeM17+ixXG4ZPUchf7h/SDJcvaNnZbROhBKCKYhKCnW5mAR8itocXQkTNDTLjTPB1Ti9eE4K7hik9w2Oh/4IgI1KHRnmp26f7/KqPZxOi6m2b3S5AsfHffR1QTRQ== rsa-key-20150120',
                       },
 
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
 hostname_prefix = 'freifunk-',

  -- Name of the community.
  site_name = 'Freifunk KBU',

  -- Shorthand of the community.
  site_code = 'ffkbu',


  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.158.0.0/16',
  prefix6 = 'fdd3:5d16:b5dd::/48',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',


  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!

  ntp_servers = {'ptbtime1.ptb.de','2.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,




    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    -- ESSID used for client network.
    ap = {
      ssid = 'freifunk.net',
      -- disabled = true, (optional)

    },
	ibss = {
		ssid = 'wifimesh-kbu',
		bssid = '02:d1:11:37:fc:39',
		mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {

    channel = 44,
    htmode = 'HT40+',






    ap = {
      ssid = 'freifunk.net',
    },

   ibss = {
		ssid = 'wifimesh-kbu-5ghz',
		bssid = '02:d1:11:37:fc:59',
		mcast_rate = 12000,
    },
      },
  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.158.254.254',
    ip6 = 'fdd3:5d16:b5dd::fefe',

    -- anycast MAC of all nodes
   mac = '16:42:23:20:15:69',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
     enabled = true,
    -- configurable = true,
    mtu = 1312,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 2,
        -- List of peers.
          peers = {
          peer1 = {
            key = 'ae120edbbd07dce57c2ed6ebefd112886a1416322e7a98352866eed1e0d633cc',
            remotes = {'ipv6 "vpn1.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn1.kbu.freifunk.net" port 10010'
                      },
          },
          peer2 = {
            key = '3e01de6c771cf5a50375de4f05e51f7d9251b5659ab9fb54040bf41df411ae46',
            remotes = {'ipv6 "vpn2.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn2.kbu.freifunk.net" port 10010'
                      },
          },
          peer3 = {
            key = 'c46d7e141b60be6e57ada3087f1b25beb0bfb51e6b42d1c7f02a067d89c13a1a',
            remotes = {'ipv6 "vpn3.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn3.kbu.freifunk.net" port 10010'
                      },
          },
          peer4 = {
            key = 'f4aff2422921822102ed6e67807b0b5db334f04e071356d30fe6c927b8bb9839',
            remotes = {'ipv6 "vpn4.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn4.kbu.freifunk.net" port 10010'
                      },
          },
          peer5 = {
            key = 'a6df938cfde83b437346c91e2e548516a25321fb72820f9f757d9479240e26af',
            remotes = {'ipv6 "vpn5.kbu.freifunk.net" port 10010',
                       'ipv4 "vpn5.kbu.freifunk.net" port 10010'
                      },
          },
          peer6 = {
            key = 'f125456692a9804885ebc33375d0de6ac934b317fc45682849019704d8ee830d',
            remotes = {'ipv6 "vpn6.kbu.freifunk.net" port 10010',


                       'ipv4 "vpn6.kbu.freifunk.net" port 10010'
                      },



          },
          peer7 = {
            key = '389e8ebdf7a7329279b2eb006bd3cf92691eb26f3518e1c596b8634c9f0a3002',
            remotes = {'ipv6 "vpn7.kbu.freifunk.net" port 10010',


                       'ipv4 "vpn7.kbu.freifunk.net" port 10010'
                      },



          },
          peer8 = {
            key = 'f9dddb5a3f184fc3b10a6b16205c2392be4d11ae0af4901cb901f7f0d103333a',
            remotes = {'ipv6 "vpn8.kbu.freifunk.net" port 10010',


                       'ipv4 "vpn8.kbu.freifunk.net" port 10010'
                      },



          },
          peer9 = {
            key = 'f5e46569c4806ffe9f6321378e63ec0dba3963fc0d3f6220a4a412c84d455c95',
            remotes = {'ipv6 "vpn9.kbu.freifunk.net" port 10010',


                       'ipv4 "vpn9.kbu.freifunk.net" port 10010'
                      },



          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },

 autoupdater = {

    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'experimental',
    enabled = true,
    
    -- List of branches. You may define multiple branches.
    branches = {
       
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {	'http://[2001:67c:20a0:b100:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b101:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b102:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b103:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b104:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b105:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b106:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b107:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b108:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b109:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {



                'de5cfc182b9f29a9d0d2cce23d5e26629151d7cb7136ed7e3e3a968a0af26dd4', -- Delta
        },
      },
            experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {	'http://[2001:67c:20a0:b100:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b101:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b102:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b103:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b104:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b105:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b106:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b107:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b108:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b109:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					},


        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'de5cfc182b9f29a9d0d2cce23d5e26629151d7cb7136ed7e3e3a968a0af26dd4', -- Delta



        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 384,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
   setup_mode = {
   skip = true,
   },
}
