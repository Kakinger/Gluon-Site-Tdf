-- This is an example site configuration for Gluon v2015.1+ with FF-KBU
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
 hostname_prefix = 'freifunk-',

  -- Name of the community.
  site_name = 'Freifunk Koeln, Bonn und Umgebung',

  -- Shorthand of the community.
  site_code = 'ffkbu',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '172.26.0.0/15',
  prefix6 = '2001:67C:20A0:B100::/56',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ptbtime1.ptb.de','2.pool.ntp.org'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    -- ESSID used for client network.
    ap = {
      ssid = 'kbu.freifunk.net',
      -- disabled = true, (optional)
    },
	ibss = {
		ssid = '02:d1:11:37:fc:39',
		bssid = '02:d1:11:37:fc:39',
		mcast_rate = 12000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    channel = 44,
    htmode = 'HT40+',
    ap = {
      ssid = 'kbu.freifunk.net',
    },
   ibss = {
		ssid = '02:d1:11:37:fc:59',
		bssid = '02:d1:11:37:fc:59',
		mcast_rate = 12000,
    },
      },
  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '172.27.254.253',
    ip6 = 'fdef:ffc0:3dd7::1',

    -- anycast MAC of all nodes
    mac = '16:41:ca:fe:be:ef',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
     enabled = true,
    -- configurable = true,
    mtu = 1312,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 2,
        -- List of peers.
          peers = {
            fastd1 = {
              key = '657af03e36ff1b8bbe5a5134982a4f110c8523a9a63293870caf548916a95a03',
              remotes = {'ipv4 "fastd1.kbu.freifunk.net" port 10002'},
	    },
	    fastd2 = {
	        key = '93654269a9ad0763851ed930e47a453b70bcbb874879e5c1f639df3f44d72d31',
        	remotes = {'ipv4 "fastd2.kbu.freifunk.net" port 10002'},
            },
	    fastd3 = {
		key = 'd56181dfe9b5ac7cfe68a94c0ce406322a9924286a751673da0dcb28ad5218b0',
		remotes = {'ipv4 "fastd3.kbu.freifunk.net" port 10002'},
	    },
	    fastd4 = {
	  	key = '9b3f65f99963343e2785c8c4fad65e70b73ee7e1205d63bd84f3e2decb53e621',
		remotes = {'ipv4 "fastd4.kbu.freifunk.net" port 10002'},
	    },
	fastd5 = {
	  	key = '6e4546121d16e7189715aef8ceb78ab58d59462720969318445f97b4301374d1',
	  	remotes = {'ipv4 "fastd5.kbu.freifunk.net" port 10002'},
	    },
	fastd6 = {
		key = '2a2c69dbb3b9fd90d7eb8e2f70be70b472d811cd4f3743ad9f5002d14b5c94cd',
		remotes = {'ipv4 "fastd6.kbu.freifunk.net" port 10002'},
	},
	fastd7 = {
		key = '68de6815a89270c8eaf7832deedb8da098aad2ae5793cd2cd55dec3541ad28f2',
		remotes = {'ipv4 "fastd7.kbu.freifunk.net" port 10002'},
	},
	fastd8 = {
		key = 'b41a9714b1178ce428b15af0b6055cc204b39af2088ef3b371d8c36219eedd1e',
		remotes = {'ipv4 "fastd8.kbu.freifunk.net" port 10002'},
	},
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },
 autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'experimental',
    enabled = true,
    
    -- List of branches. You may define multiple branches.
    branches = {
       
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {	'http://[2001:67c:20a0:b100:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b104:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b106:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					'http://[2001:67c:20a0:b107:ba27:ebff:feed:e7bc]/firmware/stable/sysupgrade',
					},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'de5cfc182b9f29a9d0d2cce23d5e26629151d7cb7136ed7e3e3a968a0af26dd4', -- Delta
        },
      },
            experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {	'http://[2001:67c:20a0:b100:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b104:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b106:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					'http://[2001:67c:20a0:b107:ba27:ebff:feed:e7bc]/firmware/experimental/sysupgrade',
					},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'de5cfc182b9f29a9d0d2cce23d5e26629151d7cb7136ed7e3e3a968a0af26dd4', -- Delta
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 384,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
   setup_mode = {
   skip = true,
   },
}
